worker_processes  1;

events {
    worker_connections  1024;
}

http {
    upstream reg_hosted {
        server registry-hosted:5000;
    }

    upstream reg_proxy {
        server registry-proxy:5000;
    }


    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    lua_shared_dict prometheus_metrics 10M;
    lua_package_path "/usr/local/openresty/site/lualib/?.lua";
    init_by_lua_block {
        prometheus = require("prometheus").init("prometheus_metrics")
        metric_requests = prometheus:counter(
            "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
        metric_latency = prometheus:histogram(
            "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
        metric_connections = prometheus:gauge(
            "nginx_http_connections", "Number of HTTP connections", {"state"})
    }
    log_by_lua_block {
        metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
        metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
    }

    include /etc/nginx/conf.d/*.conf;
}
